{
  "contractName": "ElectionFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "chairperson",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2e4176cf"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x3f4ba83a"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x46fbf68e"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_chairperson",
          "type": "address"
        }
      ],
      "name": "changeChairperson",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x53c3842b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x5c975abb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "elections",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x5e6fef01"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x6ef8d66d"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentBatch",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x76cd940e"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x82dc1ec4"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8456cb59"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "chairperson",
          "type": "address"
        }
      ],
      "name": "ElectionCreated",
      "type": "event",
      "signature": "0x3bf25a9dfa34d3f99eec4217177ec490f7a345ee390de1e739e9c816a37122f0"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "factoryChairperson",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "electionChairperson",
          "type": "address"
        }
      ],
      "name": "ElectionAdded",
      "type": "event",
      "signature": "0xa4db12bbd8af3cf1e704f6dca4638d558561f5bcb7118efeaa5484dfda7d3171"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousChairperson",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newChairperson",
          "type": "address"
        }
      ],
      "name": "ChairpersonChanged",
      "type": "event",
      "signature": "0x0c94bd78906673549bca6b8028fe63bc67d94221969491c23a7b75ef2c796354"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event",
      "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event",
      "signature": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event",
      "signature": "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event",
      "signature": "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "newElection",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf68a3b10"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_electionContract",
          "type": "address"
        }
      ],
      "name": "addElection",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x694b98ce"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeCurrentElection",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x25815d7d"
    }
  ],
  "bytecode": "0x608060405260006003553480156200001657600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3620000ed336200014f640100000000026401000000009004565b6000600260006101000a81548160ff02191690831515021790555033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000311565b62000173816001620001b96401000000000262001499179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620001f657600080fd5b6200021182826200027c640100000000026401000000009004565b1515156200021e57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620002ba57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61333780620003216000396000f3fe60806040526004361062000103576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806325815d7d14620001085780632e4176cf14620001225780633f4ba83a146200017c57806346fbf68e146200019657806353c3842b14620002035780635c975abb14620002585780635e6fef01146200028a578063694b98ce14620003095780636ef8d66d146200035e578063715018a6146200037857806376cd940e146200039257806382dc1ec414620003c05780638456cb5914620004155780638da5cb5b146200042f5780638f32d59b1462000489578063f2fde38b14620004bb578063f68a3b101462000510575b600080fd5b3480156200011557600080fd5b50620001206200052a565b005b3480156200012f57600080fd5b506200013a62000659565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200018957600080fd5b50620001946200067f565b005b348015620001a357600080fd5b50620001e960048036036020811015620001bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000732565b604051808215151515815260200191505060405180910390f35b3480156200021057600080fd5b5062000256600480360360208110156200022957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000751565b005b3480156200026557600080fd5b506200027062000881565b604051808215151515815260200191505060405180910390f35b3480156200029757600080fd5b50620002c760048036036020811015620002b057600080fd5b810190808035906020019092919050505062000898565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200031657600080fd5b506200035c600480360360208110156200032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620008cb565b005b3480156200036b57600080fd5b506200037662000c47565b005b3480156200038557600080fd5b506200039062000c54565b005b3480156200039f57600080fd5b50620003aa62000d29565b6040518082815260200191505060405180910390f35b348015620003cd57600080fd5b506200041360048036036020811015620003e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000d2f565b005b3480156200042257600080fd5b506200042d62000d54565b005b3480156200043c57600080fd5b506200044762000e08565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200049657600080fd5b50620004a162000e31565b604051808215151515815260200191505060405180910390f35b348015620004c857600080fd5b506200050e60048036036020811015620004e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000e88565b005b3480156200051d57600080fd5b506200052862000eac565b005b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200058757600080fd5b600260009054906101000a900460ff16151515620005a457600080fd5b60046000600354815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156200063e57600080fd5b505af115801562000653573d6000803e3d6000fd5b50505050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6200068a3362000732565b15156200069657600080fd5b600260009054906101000a900460ff161515620006b257600080fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006200074a8260016200119e90919063ffffffff16565b9050919050565b6200075b62000e31565b15156200076757600080fd5b600260009054906101000a900460ff161515156200078457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620007c157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f0c94bd78906673549bca6b8028fe63bc67d94221969491c23a7b75ef2c79635460405160405180910390a380600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260009054906101000a900460ff16905090565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200092857600080fd5b600260009054906101000a900460ff161515156200094557600080fd5b600060035414151562000ac35760046000600354815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663597e1fb56040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015620009ea57600080fd5b505afa158015620009ff573d6000803e3d6000fd5b505050506040513d602081101562000a1657600080fd5b8101908080519060200190929190505050151562000ac2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001807f5374617274696e67206e657720456c656374696f6e207265717569726573207481526020017f686174207468652070726576696f757320697320636c6f73656400000000000081525060400191505060405180910390fd5b5b6003600081548092919060010191905055508060046000600354815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16632e4176cf6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801562000b8c57600080fd5b505afa15801562000ba1573d6000803e3d6000fd5b505050506040513d602081101562000bb857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fa4db12bbd8af3cf1e704f6dca4638d558561f5bcb7118efeaa5484dfda7d317160405160405180910390a350565b62000c523362001233565b565b62000c5e62000e31565b151562000c6a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60035481565b62000d3a3362000732565b151562000d4657600080fd5b62000d51816200128f565b50565b62000d5f3362000732565b151562000d6b57600080fd5b600260009054906101000a900460ff1615151562000d8857600080fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b62000e9262000e31565b151562000e9e57600080fd5b62000ea981620012eb565b50565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562000f0957600080fd5b600260009054906101000a900460ff1615151562000f2657600080fd5b6000600354141515620010a45760046000600354815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663597e1fb56040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801562000fcb57600080fd5b505afa15801562000fe0573d6000803e3d6000fd5b505050506040513d602081101562000ff757600080fd5b81019080805190602001909291905050501515620010a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001807f5374617274696e67206e657720456c656374696f6e207265717569726573207481526020017f686174207468652070726576696f757320697320636c6f73656400000000000081525060400191505060405180910390fd5b5b6003600081548092919060010191905055506000620010c26200154d565b604051809103906000f080158015620010df573d6000803e3d6000fd5b5090508060046000600354815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3bf25a9dfa34d3f99eec4217177ec490f7a345ee390de1e739e9c816a37122f060405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620011dc57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b62001249816001620013e690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b620012a58160016200149990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200132857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200142357600080fd5b6200142f82826200119e565b15156200143b57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620014d657600080fd5b620014e282826200119e565b151515620014ef57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b604051611dad806200155f8339019056fe60806040526000600260156101000a81548160ff0219169083151502179055503480156200002c57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36200010333620001a8640100000000026401000000009004565b6000600260006101000a81548160ff02191690831515021790555033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f4b262e336aa13d3604f3b9f35e3987dbb6e1d31e3a33291aaf3c151cf5b2968d60405160405180910390a26200036a565b620001cc816001620002126401000000000262001957179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200024f57600080fd5b6200026a8282620002d5640100000000026401000000009004565b1515156200027757600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200031357600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611a33806200037a6000396000f3fe608060405260043610610128576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063141f74361461012d5780632e4176cf146101885780633f4ba83a146101df57806343d726d6146101f657806346fbf68e1461020d578063482cf8011461027657806353c3842b146102e2578063597e1fb5146103335780635c975abb1461036257806368b91e2d146103915780636dd7d8ea1461040c5780636ef8d66d1461045d578063715018a6146104745780638205d9641461048b57806382dc1ec4146104b65780638456cb59146105075780638da5cb5b1461051e5780638f32d59b14610575578063b50bffa3146105a4578063c19fe6c2146105df578063d6eb628514610644578063f2fde38b146106cd575b600080fd5b34801561013957600080fd5b506101866004803603604081101561015057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061071e565b005b34801561019457600080fd5b5061019d61082d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101eb57600080fd5b506101f4610853565b005b34801561020257600080fd5b5061020b610902565b005b34801561021957600080fd5b5061025c6004803603602081101561023057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109da565b604051808215151515815260200191505060405180910390f35b34801561028257600080fd5b506102c56004803603602081101561029957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109f7565b604051808381526020018281526020019250505060405180910390f35b3480156102ee57600080fd5b506103316004803603602081101561030557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a1b565b005b34801561033f57600080fd5b50610348610b46565b604051808215151515815260200191505060405180910390f35b34801561036e57600080fd5b50610377610b59565b604051808215151515815260200191505060405180910390f35b34801561039d57600080fd5b506103ca600480360360208110156103b457600080fd5b8101908080359060200190929190505050610b70565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041857600080fd5b5061045b6004803603602081101561042f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bae565b005b34801561046957600080fd5b50610472610fdc565b005b34801561048057600080fd5b50610489610fe7565b005b34801561049757600080fd5b506104a06110b9565b6040518082815260200191505060405180910390f35b3480156104c257600080fd5b50610505600480360360208110156104d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110c6565b005b34801561051357600080fd5b5061051c6110e6565b005b34801561052a57600080fd5b50610533611196565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058157600080fd5b5061058a6111bf565b604051808215151515815260200191505060405180910390f35b3480156105b057600080fd5b506105dd600480360360208110156105c757600080fd5b8101908080359060200190929190505050611216565b005b3480156105eb57600080fd5b5061062e6004803603602081101561060257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611223565b6040518082815260200191505060405180910390f35b34801561065057600080fd5b506106b36004803603604081101561066757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611272565b604051808215151515815260200191505060405180910390f35b3480156106d957600080fd5b5061071c600480360360208110156106f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611309565b005b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561077a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561081f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c69642077616c6c657400000000000000000000000000000000000081525060200191505060405180910390fd5b6108298282611328565b5050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61085c336109da565b151561086757600080fd5b600260009054906101000a900460ff16151561088257600080fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561095e57600080fd5b600260009054906101000a900460ff1615151561097a57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f0b58a262168e64f7399bbbf7f6af70c1653a375865ac71daafc2827150a215b060405160405180910390a26001600260156101000a81548160ff021916908315150217905550565b60006109f082600161166690919063ffffffff16565b9050919050565b60036020528060005260406000206000915090508060000154908060030154905082565b610a236111bf565b1515610a2e57600080fd5b600260009054906101000a900460ff16151515610a4a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a8657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f0c94bd78906673549bca6b8028fe63bc67d94221969491c23a7b75ef2c79635460405160405180910390a380600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260159054906101000a900460ff1681565b6000600260009054906101000a900460ff16905090565b600481815481101515610b7f57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60001515600260159054906101000a900460ff161515141515610c39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456c656374696f6e20697320636c6f736564000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff16151515610c5557600080fd5b6000600102600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414151515610d13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4775727520646f6573206e6f742065786973740000000000000000000000000081525060200191505060405180910390fd5b60001515600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610e41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f596f752068616420616c726561647920766f74656420666f722074686973206781526020017f757275000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fce0c7a2a940807f7dc2ce7a615c2532e915e6c0ac9a08bc4ed9d515a710a53e260405160405180910390a36001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610fe5336116fa565b565b610fef6111bf565b1515610ffa57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600480549050905090565b6110cf336109da565b15156110da57600080fd5b6110e381611754565b50565b6110ef336109da565b15156110fa57600080fd5b600260009054906101000a900460ff1615151561111657600080fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6112208133611328565b50565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201805490509050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6113116111bf565b151561131c57600080fd5b611325816117ae565b50565b60001515600260159054906101000a900460ff1615151415156113b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456c656374696f6e20697320636c6f736564000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff161515156113cf57600080fd5b6000600102821415151561144b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4e616d652063616e6e6f7420626520626c61636b00000000000000000000000081525060200191505060405180910390fd5b6000600102600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141515611508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f477572752077617320616c72656164792061646465640000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f2f134586d24725c7c501b839df8f612336c848b516262cca8c79185fce22df70846040518082815260200191505060405180910390a381600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600160048290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555003600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156116a357600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61170e8160016118a890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b61176881600161195790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117ea57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156118e457600080fd5b6118ee8282611666565b15156118f957600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561199357600080fd5b61199d8282611666565b1515156119a957600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea165627a7a7230582058e282b09dee6028c04509050cdb1f1edd4458e6f50eead7098b3d21194dd77d0029a165627a7a72305820ac311572501812711dac65b7ebd276cfe958df6712be9cea4b782b1046f4fb130029",
  "deployedBytecode": "0x60806040526004361062000103576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806325815d7d14620001085780632e4176cf14620001225780633f4ba83a146200017c57806346fbf68e146200019657806353c3842b14620002035780635c975abb14620002585780635e6fef01146200028a578063694b98ce14620003095780636ef8d66d146200035e578063715018a6146200037857806376cd940e146200039257806382dc1ec414620003c05780638456cb5914620004155780638da5cb5b146200042f5780638f32d59b1462000489578063f2fde38b14620004bb578063f68a3b101462000510575b600080fd5b3480156200011557600080fd5b50620001206200052a565b005b3480156200012f57600080fd5b506200013a62000659565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200018957600080fd5b50620001946200067f565b005b348015620001a357600080fd5b50620001e960048036036020811015620001bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000732565b604051808215151515815260200191505060405180910390f35b3480156200021057600080fd5b5062000256600480360360208110156200022957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000751565b005b3480156200026557600080fd5b506200027062000881565b604051808215151515815260200191505060405180910390f35b3480156200029757600080fd5b50620002c760048036036020811015620002b057600080fd5b810190808035906020019092919050505062000898565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200031657600080fd5b506200035c600480360360208110156200032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620008cb565b005b3480156200036b57600080fd5b506200037662000c47565b005b3480156200038557600080fd5b506200039062000c54565b005b3480156200039f57600080fd5b50620003aa62000d29565b6040518082815260200191505060405180910390f35b348015620003cd57600080fd5b506200041360048036036020811015620003e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000d2f565b005b3480156200042257600080fd5b506200042d62000d54565b005b3480156200043c57600080fd5b506200044762000e08565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200049657600080fd5b50620004a162000e31565b604051808215151515815260200191505060405180910390f35b348015620004c857600080fd5b506200050e60048036036020811015620004e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000e88565b005b3480156200051d57600080fd5b506200052862000eac565b005b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200058757600080fd5b600260009054906101000a900460ff16151515620005a457600080fd5b60046000600354815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156200063e57600080fd5b505af115801562000653573d6000803e3d6000fd5b50505050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6200068a3362000732565b15156200069657600080fd5b600260009054906101000a900460ff161515620006b257600080fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006200074a8260016200119e90919063ffffffff16565b9050919050565b6200075b62000e31565b15156200076757600080fd5b600260009054906101000a900460ff161515156200078457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620007c157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f0c94bd78906673549bca6b8028fe63bc67d94221969491c23a7b75ef2c79635460405160405180910390a380600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260009054906101000a900460ff16905090565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200092857600080fd5b600260009054906101000a900460ff161515156200094557600080fd5b600060035414151562000ac35760046000600354815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663597e1fb56040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015620009ea57600080fd5b505afa158015620009ff573d6000803e3d6000fd5b505050506040513d602081101562000a1657600080fd5b8101908080519060200190929190505050151562000ac2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001807f5374617274696e67206e657720456c656374696f6e207265717569726573207481526020017f686174207468652070726576696f757320697320636c6f73656400000000000081525060400191505060405180910390fd5b5b6003600081548092919060010191905055508060046000600354815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16632e4176cf6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801562000b8c57600080fd5b505afa15801562000ba1573d6000803e3d6000fd5b505050506040513d602081101562000bb857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fa4db12bbd8af3cf1e704f6dca4638d558561f5bcb7118efeaa5484dfda7d317160405160405180910390a350565b62000c523362001233565b565b62000c5e62000e31565b151562000c6a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60035481565b62000d3a3362000732565b151562000d4657600080fd5b62000d51816200128f565b50565b62000d5f3362000732565b151562000d6b57600080fd5b600260009054906101000a900460ff1615151562000d8857600080fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b62000e9262000e31565b151562000e9e57600080fd5b62000ea981620012eb565b50565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562000f0957600080fd5b600260009054906101000a900460ff1615151562000f2657600080fd5b6000600354141515620010a45760046000600354815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663597e1fb56040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801562000fcb57600080fd5b505afa15801562000fe0573d6000803e3d6000fd5b505050506040513d602081101562000ff757600080fd5b81019080805190602001909291905050501515620010a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001807f5374617274696e67206e657720456c656374696f6e207265717569726573207481526020017f686174207468652070726576696f757320697320636c6f73656400000000000081525060400191505060405180910390fd5b5b6003600081548092919060010191905055506000620010c26200154d565b604051809103906000f080158015620010df573d6000803e3d6000fd5b5090508060046000600354815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3bf25a9dfa34d3f99eec4217177ec490f7a345ee390de1e739e9c816a37122f060405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620011dc57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b62001249816001620013e690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b620012a58160016200149990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200132857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200142357600080fd5b6200142f82826200119e565b15156200143b57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620014d657600080fd5b620014e282826200119e565b151515620014ef57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b604051611dad806200155f8339019056fe60806040526000600260156101000a81548160ff0219169083151502179055503480156200002c57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36200010333620001a8640100000000026401000000009004565b6000600260006101000a81548160ff02191690831515021790555033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f4b262e336aa13d3604f3b9f35e3987dbb6e1d31e3a33291aaf3c151cf5b2968d60405160405180910390a26200036a565b620001cc816001620002126401000000000262001957179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200024f57600080fd5b6200026a8282620002d5640100000000026401000000009004565b1515156200027757600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200031357600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611a33806200037a6000396000f3fe608060405260043610610128576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063141f74361461012d5780632e4176cf146101885780633f4ba83a146101df57806343d726d6146101f657806346fbf68e1461020d578063482cf8011461027657806353c3842b146102e2578063597e1fb5146103335780635c975abb1461036257806368b91e2d146103915780636dd7d8ea1461040c5780636ef8d66d1461045d578063715018a6146104745780638205d9641461048b57806382dc1ec4146104b65780638456cb59146105075780638da5cb5b1461051e5780638f32d59b14610575578063b50bffa3146105a4578063c19fe6c2146105df578063d6eb628514610644578063f2fde38b146106cd575b600080fd5b34801561013957600080fd5b506101866004803603604081101561015057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061071e565b005b34801561019457600080fd5b5061019d61082d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101eb57600080fd5b506101f4610853565b005b34801561020257600080fd5b5061020b610902565b005b34801561021957600080fd5b5061025c6004803603602081101561023057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109da565b604051808215151515815260200191505060405180910390f35b34801561028257600080fd5b506102c56004803603602081101561029957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109f7565b604051808381526020018281526020019250505060405180910390f35b3480156102ee57600080fd5b506103316004803603602081101561030557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a1b565b005b34801561033f57600080fd5b50610348610b46565b604051808215151515815260200191505060405180910390f35b34801561036e57600080fd5b50610377610b59565b604051808215151515815260200191505060405180910390f35b34801561039d57600080fd5b506103ca600480360360208110156103b457600080fd5b8101908080359060200190929190505050610b70565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041857600080fd5b5061045b6004803603602081101561042f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bae565b005b34801561046957600080fd5b50610472610fdc565b005b34801561048057600080fd5b50610489610fe7565b005b34801561049757600080fd5b506104a06110b9565b6040518082815260200191505060405180910390f35b3480156104c257600080fd5b50610505600480360360208110156104d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110c6565b005b34801561051357600080fd5b5061051c6110e6565b005b34801561052a57600080fd5b50610533611196565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058157600080fd5b5061058a6111bf565b604051808215151515815260200191505060405180910390f35b3480156105b057600080fd5b506105dd600480360360208110156105c757600080fd5b8101908080359060200190929190505050611216565b005b3480156105eb57600080fd5b5061062e6004803603602081101561060257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611223565b6040518082815260200191505060405180910390f35b34801561065057600080fd5b506106b36004803603604081101561066757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611272565b604051808215151515815260200191505060405180910390f35b3480156106d957600080fd5b5061071c600480360360208110156106f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611309565b005b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561077a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561081f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c69642077616c6c657400000000000000000000000000000000000081525060200191505060405180910390fd5b6108298282611328565b5050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61085c336109da565b151561086757600080fd5b600260009054906101000a900460ff16151561088257600080fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561095e57600080fd5b600260009054906101000a900460ff1615151561097a57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f0b58a262168e64f7399bbbf7f6af70c1653a375865ac71daafc2827150a215b060405160405180910390a26001600260156101000a81548160ff021916908315150217905550565b60006109f082600161166690919063ffffffff16565b9050919050565b60036020528060005260406000206000915090508060000154908060030154905082565b610a236111bf565b1515610a2e57600080fd5b600260009054906101000a900460ff16151515610a4a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a8657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f0c94bd78906673549bca6b8028fe63bc67d94221969491c23a7b75ef2c79635460405160405180910390a380600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260159054906101000a900460ff1681565b6000600260009054906101000a900460ff16905090565b600481815481101515610b7f57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60001515600260159054906101000a900460ff161515141515610c39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456c656374696f6e20697320636c6f736564000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff16151515610c5557600080fd5b6000600102600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414151515610d13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4775727520646f6573206e6f742065786973740000000000000000000000000081525060200191505060405180910390fd5b60001515600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610e41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f596f752068616420616c726561647920766f74656420666f722074686973206781526020017f757275000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fce0c7a2a940807f7dc2ce7a615c2532e915e6c0ac9a08bc4ed9d515a710a53e260405160405180910390a36001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610fe5336116fa565b565b610fef6111bf565b1515610ffa57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600480549050905090565b6110cf336109da565b15156110da57600080fd5b6110e381611754565b50565b6110ef336109da565b15156110fa57600080fd5b600260009054906101000a900460ff1615151561111657600080fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6112208133611328565b50565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201805490509050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6113116111bf565b151561131c57600080fd5b611325816117ae565b50565b60001515600260159054906101000a900460ff1615151415156113b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456c656374696f6e20697320636c6f736564000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff161515156113cf57600080fd5b6000600102821415151561144b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4e616d652063616e6e6f7420626520626c61636b00000000000000000000000081525060200191505060405180910390fd5b6000600102600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141515611508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f477572752077617320616c72656164792061646465640000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f2f134586d24725c7c501b839df8f612336c848b516262cca8c79185fce22df70846040518082815260200191505060405180910390a381600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600160048290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555003600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156116a357600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61170e8160016118a890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b61176881600161195790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117ea57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156118e457600080fd5b6118ee8282611666565b15156118f957600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561199357600080fd5b61199d8282611666565b1515156119a957600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea165627a7a7230582058e282b09dee6028c04509050cdb1f1edd4458e6f50eead7098b3d21194dd77d0029a165627a7a72305820ac311572501812711dac65b7ebd276cfe958df6712be9cea4b782b1046f4fb130029",
  "sourceMap": "375:2210:2:-;;;449:1;422:28;;1031:43;8:9:-1;5:2;;;30:1;27;20:12;5:2;1031:43:2;524:10:7;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;275:22:5;286:10;275;;;:22;;;:::i;:::-;362:5:6;352:7;;:15;;;;;;;;;;;;;;;;;;682:10:1;668:11;;:24;;;;;;;;;;;;;;;;;;375:2210:2;;685:119:5;741:21;754:7;741:8;:12;;;;;;:21;;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;259:181:4:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;;;:18;;;:::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:162::-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;375:2210:2:-;;;;;;;",
  "deployedSourceMap": "375:2210:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2360:223:2;;;;;;387:26:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;387:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1176:115:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1176:115:6;;;;;;395:107:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;395:107:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:228:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;709:228:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;709:228:1;;;;;;;;;;;;;;;;;;;;;;460:76:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;460:76:6;;;;;;;;;;;;;;;;;;;;;;;;;;;530:42:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;530:42:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;530:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1741:312;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1741:312:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1741:312:2;;;;;;;;;;;;;;;;;;;;;;604:75:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:5;;;;;;1347:137:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:7;;;;;;422:28:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;422:28:2;;;;;;;;;;;;;;;;;;;;;;;508:90:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;508:90:5;;;;;;;;;;;;;;;;;;;;;;973:113:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;973:113:6;;;;;;659:77:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:7;;;;;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:7;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:7;;;;;;;;;;;;;;;;;;;;;;1084:290:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1084:290:2;;;;;;2360:223;586:11:1;;;;;;;;;;;572:25;;:10;:25;;;564:34;;;;;;;;689:7:6;;;;;;;;;;;688:8;680:17;;;;;;;;2544:9:2;:23;2554:12;;2544:23;;;;;;;;;;;;;;;;;;;;;2535:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2535:41:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2535:41:2;;;;2360:223::o;387:26:1:-;;;;;;;;;;;;;:::o;1176:115:6:-;350:20:5;359:10;350:8;:20::i;:::-;342:29;;;;;;;;860:7:6;;;;;;;;;;;852:16;;;;;;;;1244:5;1234:7;;:15;;;;;;;;;;;;;;;;;;1264:20;1273:10;1264:20;;;;;;;;;;;;;;;;;;;;;;1176:115::o;395:107:5:-;451:4;474:21;487:7;474:8;:12;;:21;;;;:::i;:::-;467:28;;395:107;;;:::o;709:228:1:-;863:9:7;:7;:9::i;:::-;855:18;;;;;;;;689:7:6;;;;;;;;;;;688:8;680:17;;;;;;;;831:1:1;807:26;;:12;:26;;;;799:35;;;;;;;;881:12;849:45;;868:11;;;;;;;;;;;849:45;;;;;;;;;;;;918:12;904:11;;:26;;;;;;;;;;;;;;;;;;709:228;:::o;460:76:6:-;499:4;522:7;;;;;;;;;;;515:14;;460:76;:::o;530:42:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;1741:312::-;586:11:1;;;;;;;;;;;572:25;;:10;:25;;;564:34;;;;;;;;689:7:6;;;;;;;;;;;688:8;680:17;;;;;;;;863:1:2;847:12;;:17;;844:163;;;895:9;:23;905:12;;895:23;;;;;;;;;;;;;;;;;;;;;886:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;886:42:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;886:42:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;886:42:2;;;;;;;;;;;;;;;;878:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;844:163;1895:12;;:14;;;;;;;;;;;;;1945:17;1919:9;:23;1929:12;;1919:23;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;2013:17;2004:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2004:41:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2004:41:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2004:41:2;;;;;;;;;;;;;;;;1977:69;;1991:11;;;;;;;;;;;1977:69;;;;;;;;;;;;1741:312;:::o;604:75:5:-;647:25;661:10;647:13;:25::i;:::-;604:75::o;1347:137:7:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;422:28:2:-;;;;:::o;508:90:5:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;973:113:6:-;350:20:5;359:10;350:8;:20::i;:::-;342:29;;;;;;;;689:7:6;;;;;;;;;;;688:8;680:17;;;;;;;;1042:4;1032:7;;:14;;;;;;;;;;;;;;;;;;1061:18;1068:10;1061:18;;;;;;;;;;;;;;;;;;;;;;973:113::o;659:77:7:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1655:107::-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1084:290:2:-;586:11:1;;;;;;;;;;;572:25;;:10;:25;;;564:34;;;;;;;;689:7:6;;;;;;;;;;;688:8;680:17;;;;;;;;863:1:2;847:12;;:17;;844:163;;;895:9;:23;905:12;;895:23;;;;;;;;;;;;;;;;;;;;;886:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;886:42:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;886:42:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;886:42:2;;;;;;;;;;;;;;;;878:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;844:163;1213:12;;:14;;;;;;;;;;;;;1237:17;1257:14;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1257:14:2;1237:34;;1315:8;1281:9;:23;1291:12;;1281:23;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;1355:11;;;;;;;;;;;1339:28;;;;;;;;;;;;1017:1;1084:290::o;786:162:4:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;810:127:5:-;869:24;885:7;869:8;:15;;:24;;;;:::i;:::-;922:7;908:22;;;;;;;;;;;;810:127;:::o;685:119::-;741:21;754:7;741:8;:12;;:21;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;1906:183:7:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;514:184:4:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;259:181::-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;375:2210:2:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ElectionBase.sol\";\nimport \"./Election.sol\";\n\n/// @title Generates and keeps tracking of Elections smart contracts.\n/// @notice The chairperson of the factory is responsible of creating \n/// and adding the Elections smart contracts.\n/// @dev The chairperson, in this contract, could be different from \n/// the chairperson of each election.\n\ncontract ElectionFactory is ElectionBase {\n    uint public currentBatch = 0; // Default is 0. But, setting it to 0 is just to make a clearer code\n    \n    mapping (uint => address) public elections;\n    \n    event ElectionCreated(address indexed chairperson);\n    event ElectionAdded(address indexed factoryChairperson, address indexed electionChairperson);\n    \n    /// @notice enforce running only one election at a time\n    modifier latestElectionClosed() {\n        if(currentBatch != 0)\n            require(Election(elections[currentBatch]).closed(),\n                \"Starting new Election requires that the previous is closed\");\n        _;\n    }\n\n    constructor() ElectionBase() public {\n    }\n    \n    function newElection() \n        public \n        onlyChairperson\n        whenNotPaused\n        latestElectionClosed\n    {\n        currentBatch++;\n        Election election = new Election();\n        elections[currentBatch] = address(election);\n        emit ElectionCreated(chairperson);\n    }\n    \n    /// @notice This is used if the Chairperson is willing to add a contract that is\n    /// deffirent from the current one, but compatible with it.\n    /// @dev This method is added to allow for upgreadablity. If a new version of Election contract is impelmented, \n    /// the new Election contract implemenation has to be compatible with the current one.\n    function addElection(address _electionContract) \n        public \n        onlyChairperson\n        whenNotPaused\n        latestElectionClosed\n    {\n        currentBatch++;\n        elections[currentBatch] = _electionContract;\n        emit ElectionAdded(chairperson, Election(_electionContract).chairperson());\n    }\n    \n    /// @notice This is just a wrapper functions because elections \n    /// could be also closed by directly calling 'close()'\n    /// at the Election smart contract.\n    /// @dev This funciton will revert if the current Election's chairperson \n    /// is not the same as the factory chairperson.\n    function closeCurrentElection() public onlyChairperson whenNotPaused {\n        // No need to put require(currentBatch !=0) because exction will fail then in all ways.\n        Election(elections[currentBatch]).close();\n    }\n}",
  "sourcePath": "/home/xidian/Source/repo/investorX/contracts/ElectionFactory.sol",
  "ast": {
    "absolutePath": "/home/xidian/Source/repo/investorX/contracts/ElectionFactory.sol",
    "exportedSymbols": {
      "ElectionFactory": [
        469
      ]
    },
    "id": 470,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 345,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/xidian/Source/repo/investorX/contracts/ElectionBase.sol",
        "file": "./ElectionBase.sol",
        "id": 346,
        "nodeType": "ImportDirective",
        "scope": 470,
        "sourceUnit": 344,
        "src": "25:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/xidian/Source/repo/investorX/contracts/Election.sol",
        "file": "./Election.sol",
        "id": 347,
        "nodeType": "ImportDirective",
        "scope": 470,
        "sourceUnit": 278,
        "src": "54:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 348,
              "name": "ElectionBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 343,
              "src": "403:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ElectionBase_$343",
                "typeString": "contract ElectionBase"
              }
            },
            "id": 349,
            "nodeType": "InheritanceSpecifier",
            "src": "403:12:2"
          }
        ],
        "contractDependencies": [
          277,
          343,
          723,
          806,
          915
        ],
        "contractKind": "contract",
        "documentation": "@title Generates and keeps tracking of Elections smart contracts.\n @notice The chairperson of the factory is responsible of creating \n and adding the Elections smart contracts.\n @dev The chairperson, in this contract, could be different from \n the chairperson of each election.",
        "fullyImplemented": true,
        "id": 469,
        "linearizedBaseContracts": [
          469,
          343,
          806,
          723,
          915
        ],
        "name": "ElectionFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 352,
            "name": "currentBatch",
            "nodeType": "VariableDeclaration",
            "scope": 469,
            "src": "422:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 350,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "422:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 351,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "449:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 356,
            "name": "elections",
            "nodeType": "VariableDeclaration",
            "scope": 469,
            "src": "530:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 355,
              "keyType": {
                "id": 353,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "539:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "530:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 354,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "547:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 360,
            "name": "ElectionCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "indexed": true,
                  "name": "chairperson",
                  "nodeType": "VariableDeclaration",
                  "scope": 360,
                  "src": "605:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "604:29:2"
            },
            "src": "583:51:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 366,
            "name": "ElectionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 362,
                  "indexed": true,
                  "name": "factoryChairperson",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "659:34:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "indexed": true,
                  "name": "electionChairperson",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "695:35:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "658:73:2"
            },
            "src": "639:93:2"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "834:191:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 368,
                      "name": "currentBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "847:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "863:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "847:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 382,
                  "nodeType": "IfStatement",
                  "src": "844:163:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 373,
                                    "name": "elections",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 356,
                                    "src": "895:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 375,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 374,
                                    "name": "currentBatch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 352,
                                    "src": "905:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "895:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 372,
                                "name": "Election",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 277,
                                "src": "886:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Election_$277_$",
                                  "typeString": "type(contract Election)"
                                }
                              },
                              "id": 376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "886:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Election_$277",
                                "typeString": "contract Election"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "886:40:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "886:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5374617274696e67206e657720456c656374696f6e2072657175697265732074686174207468652070726576696f757320697320636c6f736564",
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "946:60:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e6f39e5f21e8086ff59122844222172777832a6e8fc92cf96a802f004551fa41",
                            "typeString": "literal_string \"Starting new Election requires that the previous is closed\""
                          },
                          "value": "Starting new Election requires that the previous is closed"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_e6f39e5f21e8086ff59122844222172777832a6e8fc92cf96a802f004551fa41",
                            "typeString": "literal_string \"Starting new Election requires that the previous is closed\""
                          }
                        ],
                        "id": 371,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          933,
                          934
                        ],
                        "referencedDeclaration": 934,
                        "src": "878:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "878:129:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 381,
                    "nodeType": "ExpressionStatement",
                    "src": "878:129:2"
                  }
                },
                {
                  "id": 383,
                  "nodeType": "PlaceholderStatement",
                  "src": "1017:1:2"
                }
              ]
            },
            "documentation": "@notice enforce running only one election at a time",
            "id": 385,
            "name": "latestElectionClosed",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "831:2:2"
            },
            "src": "802:223:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "1067:7:2",
              "statements": []
            },
            "documentation": null,
            "id": 391,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 388,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 387,
                  "name": "ElectionBase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 343,
                  "src": "1045:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ElectionBase_$343_$",
                    "typeString": "type(contract ElectionBase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1045:14:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1042:2:2"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:2"
            },
            "scope": 469,
            "src": "1031:43:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "1203:171:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1213:14:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 400,
                      "name": "currentBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "1213:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "1213:14:2"
                },
                {
                  "assignments": [
                    404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 404,
                      "name": "election",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "1237:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Election_$277",
                        "typeString": "contract Election"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 403,
                        "name": "Election",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 277,
                        "src": "1237:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Election_$277",
                          "typeString": "contract Election"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 408,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1257:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Election_$277_$",
                        "typeString": "function () returns (contract Election)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 405,
                        "name": "Election",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 277,
                        "src": "1261:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Election_$277",
                          "typeString": "contract Election"
                        }
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Election_$277",
                      "typeString": "contract Election"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1237:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "elections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "1281:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 411,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 410,
                        "name": "currentBatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "1291:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1281:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 413,
                          "name": "election",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "1315:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Election_$277",
                            "typeString": "contract Election"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Election_$277",
                            "typeString": "contract Election"
                          }
                        ],
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1307:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1307:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1281:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "1281:43:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 418,
                        "name": "chairperson",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "1355:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 417,
                      "name": "ElectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 360,
                      "src": "1339:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "EmitStatement",
                  "src": "1334:33:2"
                }
              ]
            },
            "documentation": null,
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 394,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 393,
                  "name": "onlyChairperson",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 304,
                  "src": "1132:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1132:15:2"
              },
              {
                "arguments": null,
                "id": 396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 395,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 763,
                  "src": "1156:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1156:13:2"
              },
              {
                "arguments": null,
                "id": 398,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 397,
                  "name": "latestElectionClosed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 385,
                  "src": "1178:20:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1178:20:2"
              }
            ],
            "name": "newElection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1104:2:2"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1203:0:2"
            },
            "scope": 469,
            "src": "1084:290:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "1885:168:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1895:14:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 433,
                      "name": "currentBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "1895:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "1895:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 436,
                        "name": "elections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "1919:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 438,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "currentBatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "1929:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1919:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 439,
                      "name": "_electionContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "1945:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1919:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "1919:43:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 443,
                        "name": "chairperson",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "1991:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 445,
                                "name": "_electionContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 424,
                                "src": "2013:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 444,
                              "name": "Election",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 277,
                              "src": "2004:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Election_$277_$",
                                "typeString": "type(contract Election)"
                              }
                            },
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2004:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Election_$277",
                              "typeString": "contract Election"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "chairperson",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 287,
                          "src": "2004:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2004:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 442,
                      "name": "ElectionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "1977:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1977:69:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 450,
                  "nodeType": "EmitStatement",
                  "src": "1972:74:2"
                }
              ]
            },
            "documentation": "@notice This is used if the Chairperson is willing to add a contract that is\n deffirent from the current one, but compatible with it.\n @dev This method is added to allow for upgreadablity. If a new version of Election contract is impelmented, \n the new Election contract implemenation has to be compatible with the current one.",
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 427,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 426,
                  "name": "onlyChairperson",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 304,
                  "src": "1814:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1814:15:2"
              },
              {
                "arguments": null,
                "id": 429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 428,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 763,
                  "src": "1838:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1838:13:2"
              },
              {
                "arguments": null,
                "id": 431,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 430,
                  "name": "latestElectionClosed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 385,
                  "src": "1860:20:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1860:20:2"
              }
            ],
            "name": "addElection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "name": "_electionContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "1762:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1761:27:2"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1885:0:2"
            },
            "scope": 469,
            "src": "1741:312:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 467,
              "nodeType": "Block",
              "src": "2429:154:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 460,
                              "name": "elections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "2544:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 462,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 461,
                              "name": "currentBatch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "2554:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2544:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 459,
                          "name": "Election",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 277,
                          "src": "2535:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Election_$277_$",
                            "typeString": "type(contract Election)"
                          }
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2535:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Election_$277",
                          "typeString": "contract Election"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "close",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "2535:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2535:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "2535:41:2"
                }
              ]
            },
            "documentation": "@notice This is just a wrapper functions because elections \n could be also closed by directly calling 'close()'\n at the Election smart contract.\n @dev This funciton will revert if the current Election's chairperson \n is not the same as the factory chairperson.",
            "id": 468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 455,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 454,
                  "name": "onlyChairperson",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 304,
                  "src": "2399:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2399:15:2"
              },
              {
                "arguments": null,
                "id": 457,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 456,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 763,
                  "src": "2415:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2415:13:2"
              }
            ],
            "name": "closeCurrentElection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:2:2"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2429:0:2"
            },
            "scope": 469,
            "src": "2360:223:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 470,
        "src": "375:2210:2"
      }
    ],
    "src": "0:2585:2"
  },
  "legacyAST": {
    "absolutePath": "/home/xidian/Source/repo/investorX/contracts/ElectionFactory.sol",
    "exportedSymbols": {
      "ElectionFactory": [
        469
      ]
    },
    "id": 470,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 345,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/xidian/Source/repo/investorX/contracts/ElectionBase.sol",
        "file": "./ElectionBase.sol",
        "id": 346,
        "nodeType": "ImportDirective",
        "scope": 470,
        "sourceUnit": 344,
        "src": "25:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/xidian/Source/repo/investorX/contracts/Election.sol",
        "file": "./Election.sol",
        "id": 347,
        "nodeType": "ImportDirective",
        "scope": 470,
        "sourceUnit": 278,
        "src": "54:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 348,
              "name": "ElectionBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 343,
              "src": "403:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ElectionBase_$343",
                "typeString": "contract ElectionBase"
              }
            },
            "id": 349,
            "nodeType": "InheritanceSpecifier",
            "src": "403:12:2"
          }
        ],
        "contractDependencies": [
          277,
          343,
          723,
          806,
          915
        ],
        "contractKind": "contract",
        "documentation": "@title Generates and keeps tracking of Elections smart contracts.\n @notice The chairperson of the factory is responsible of creating \n and adding the Elections smart contracts.\n @dev The chairperson, in this contract, could be different from \n the chairperson of each election.",
        "fullyImplemented": true,
        "id": 469,
        "linearizedBaseContracts": [
          469,
          343,
          806,
          723,
          915
        ],
        "name": "ElectionFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 352,
            "name": "currentBatch",
            "nodeType": "VariableDeclaration",
            "scope": 469,
            "src": "422:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 350,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "422:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 351,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "449:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 356,
            "name": "elections",
            "nodeType": "VariableDeclaration",
            "scope": 469,
            "src": "530:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 355,
              "keyType": {
                "id": 353,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "539:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "530:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 354,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "547:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 360,
            "name": "ElectionCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "indexed": true,
                  "name": "chairperson",
                  "nodeType": "VariableDeclaration",
                  "scope": 360,
                  "src": "605:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "604:29:2"
            },
            "src": "583:51:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 366,
            "name": "ElectionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 362,
                  "indexed": true,
                  "name": "factoryChairperson",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "659:34:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "indexed": true,
                  "name": "electionChairperson",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "695:35:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "658:73:2"
            },
            "src": "639:93:2"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "834:191:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 368,
                      "name": "currentBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "847:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "863:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "847:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 382,
                  "nodeType": "IfStatement",
                  "src": "844:163:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 373,
                                    "name": "elections",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 356,
                                    "src": "895:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 375,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 374,
                                    "name": "currentBatch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 352,
                                    "src": "905:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "895:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 372,
                                "name": "Election",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 277,
                                "src": "886:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Election_$277_$",
                                  "typeString": "type(contract Election)"
                                }
                              },
                              "id": 376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "886:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Election_$277",
                                "typeString": "contract Election"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "886:40:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "886:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5374617274696e67206e657720456c656374696f6e2072657175697265732074686174207468652070726576696f757320697320636c6f736564",
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "946:60:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e6f39e5f21e8086ff59122844222172777832a6e8fc92cf96a802f004551fa41",
                            "typeString": "literal_string \"Starting new Election requires that the previous is closed\""
                          },
                          "value": "Starting new Election requires that the previous is closed"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_e6f39e5f21e8086ff59122844222172777832a6e8fc92cf96a802f004551fa41",
                            "typeString": "literal_string \"Starting new Election requires that the previous is closed\""
                          }
                        ],
                        "id": 371,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          933,
                          934
                        ],
                        "referencedDeclaration": 934,
                        "src": "878:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "878:129:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 381,
                    "nodeType": "ExpressionStatement",
                    "src": "878:129:2"
                  }
                },
                {
                  "id": 383,
                  "nodeType": "PlaceholderStatement",
                  "src": "1017:1:2"
                }
              ]
            },
            "documentation": "@notice enforce running only one election at a time",
            "id": 385,
            "name": "latestElectionClosed",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "831:2:2"
            },
            "src": "802:223:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "1067:7:2",
              "statements": []
            },
            "documentation": null,
            "id": 391,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 388,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 387,
                  "name": "ElectionBase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 343,
                  "src": "1045:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ElectionBase_$343_$",
                    "typeString": "type(contract ElectionBase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1045:14:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1042:2:2"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:2"
            },
            "scope": 469,
            "src": "1031:43:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "1203:171:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1213:14:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 400,
                      "name": "currentBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "1213:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "1213:14:2"
                },
                {
                  "assignments": [
                    404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 404,
                      "name": "election",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "1237:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Election_$277",
                        "typeString": "contract Election"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 403,
                        "name": "Election",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 277,
                        "src": "1237:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Election_$277",
                          "typeString": "contract Election"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 408,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1257:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Election_$277_$",
                        "typeString": "function () returns (contract Election)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 405,
                        "name": "Election",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 277,
                        "src": "1261:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Election_$277",
                          "typeString": "contract Election"
                        }
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Election_$277",
                      "typeString": "contract Election"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1237:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "elections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "1281:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 411,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 410,
                        "name": "currentBatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "1291:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1281:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 413,
                          "name": "election",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "1315:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Election_$277",
                            "typeString": "contract Election"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Election_$277",
                            "typeString": "contract Election"
                          }
                        ],
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1307:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1307:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1281:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "1281:43:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 418,
                        "name": "chairperson",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "1355:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 417,
                      "name": "ElectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 360,
                      "src": "1339:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "EmitStatement",
                  "src": "1334:33:2"
                }
              ]
            },
            "documentation": null,
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 394,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 393,
                  "name": "onlyChairperson",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 304,
                  "src": "1132:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1132:15:2"
              },
              {
                "arguments": null,
                "id": 396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 395,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 763,
                  "src": "1156:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1156:13:2"
              },
              {
                "arguments": null,
                "id": 398,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 397,
                  "name": "latestElectionClosed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 385,
                  "src": "1178:20:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1178:20:2"
              }
            ],
            "name": "newElection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1104:2:2"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1203:0:2"
            },
            "scope": 469,
            "src": "1084:290:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "1885:168:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1895:14:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 433,
                      "name": "currentBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "1895:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "1895:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 436,
                        "name": "elections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "1919:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 438,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "currentBatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "1929:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1919:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 439,
                      "name": "_electionContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "1945:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1919:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "1919:43:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 443,
                        "name": "chairperson",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "1991:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 445,
                                "name": "_electionContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 424,
                                "src": "2013:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 444,
                              "name": "Election",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 277,
                              "src": "2004:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Election_$277_$",
                                "typeString": "type(contract Election)"
                              }
                            },
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2004:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Election_$277",
                              "typeString": "contract Election"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "chairperson",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 287,
                          "src": "2004:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2004:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 442,
                      "name": "ElectionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "1977:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1977:69:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 450,
                  "nodeType": "EmitStatement",
                  "src": "1972:74:2"
                }
              ]
            },
            "documentation": "@notice This is used if the Chairperson is willing to add a contract that is\n deffirent from the current one, but compatible with it.\n @dev This method is added to allow for upgreadablity. If a new version of Election contract is impelmented, \n the new Election contract implemenation has to be compatible with the current one.",
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 427,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 426,
                  "name": "onlyChairperson",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 304,
                  "src": "1814:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1814:15:2"
              },
              {
                "arguments": null,
                "id": 429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 428,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 763,
                  "src": "1838:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1838:13:2"
              },
              {
                "arguments": null,
                "id": 431,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 430,
                  "name": "latestElectionClosed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 385,
                  "src": "1860:20:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1860:20:2"
              }
            ],
            "name": "addElection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "name": "_electionContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "1762:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1761:27:2"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1885:0:2"
            },
            "scope": 469,
            "src": "1741:312:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 467,
              "nodeType": "Block",
              "src": "2429:154:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 460,
                              "name": "elections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "2544:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 462,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 461,
                              "name": "currentBatch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "2554:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2544:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 459,
                          "name": "Election",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 277,
                          "src": "2535:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Election_$277_$",
                            "typeString": "type(contract Election)"
                          }
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2535:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Election_$277",
                          "typeString": "contract Election"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "close",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "2535:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2535:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "2535:41:2"
                }
              ]
            },
            "documentation": "@notice This is just a wrapper functions because elections \n could be also closed by directly calling 'close()'\n at the Election smart contract.\n @dev This funciton will revert if the current Election's chairperson \n is not the same as the factory chairperson.",
            "id": 468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 455,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 454,
                  "name": "onlyChairperson",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 304,
                  "src": "2399:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2399:15:2"
              },
              {
                "arguments": null,
                "id": 457,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 456,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 763,
                  "src": "2415:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2415:13:2"
              }
            ],
            "name": "closeCurrentElection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:2:2"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2429:0:2"
            },
            "scope": 469,
            "src": "2360:223:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 470,
        "src": "375:2210:2"
      }
    ],
    "src": "0:2585:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x788f2Ab55fFE0dd9Ab74D8243Ef7f3B10A21a5f6",
      "transactionHash": "0x60f5b3647b9d82d84862dcb4bfdc497d420d604cbb5afaac09ccfd7ac6dfcd90"
    }
  },
  "schemaVersion": "3.0.3",
  "updatedAt": "2019-03-30T13:04:08.415Z",
  "devdoc": {
    "details": "The chairperson, in this contract, could be different from  the chairperson of each election.",
    "methods": {
      "addElection(address)": {
        "details": "This method is added to allow for upgreadablity. If a new version of Election contract is impelmented,  the new Election contract implemenation has to be compatible with the current one."
      },
      "closeCurrentElection()": {
        "details": "This funciton will revert if the current Election's chairperson  is not the same as the factory chairperson."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    },
    "title": "Generates and keeps tracking of Elections smart contracts."
  },
  "userdoc": {
    "methods": {
      "addElection(address)": {
        "notice": "This is used if the Chairperson is willing to add a contract that is deffirent from the current one, but compatible with it."
      },
      "closeCurrentElection()": {
        "notice": "This is just a wrapper functions because elections  could be also closed by directly calling 'close()' at the Election smart contract."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "notice": "The chairperson of the factory is responsible of creating  and adding the Elections smart contracts."
  }
}